<?php

/**
 * @package     Qodehub\Slydepay
 * @link        https://github.com/qodehub/slydepay-php
 *
 * @author      Ariama O. Victor (ovac4u) <victorariama@qodehub.com>
 * @link        http://www.ovac4u.com
 *
 * @license     https://github.com/qodehub/slydepay-php/blob/master/LICENSE
 * @copyright   (c) 2018, QodeHub, Ltd
 */

namespace Qodehub\Slydepay\Api;

use Qodehub\Slydepay\Utility\CanCleanParameters;
use Qodehub\Slydepay\Utility\MassAssignable;

/**
 * ListPayOptions Class
 */
class CheckPaymentStatus extends SendInvoice
{
    use MassAssignable;
    use CanCleanParameters;

    /**
     * {@inheritdoc}
     */
    protected $parametersRequired = [
        'confirmTransaction',
    ];

    /**
     * {@inheritdoc}
     */
    protected $parametersOptional = [
        'orderCode',
        'payToken',
    ];

    /**
     * Mandatory If set to true slydepay will confirm pending payment for this order
     *
     * @var string
     */
    protected $confirmTransaction;

    /**
     * Optional Paytoken returned by Slydepay. This is optional if orderCode is used.
     *
     * @var string
     */
    protected $payToken;
    /**
     * Optional Your merchant order unique Id generated by/in your system.
     * This is optional if payToken is used
     *
     * @var string
     */
    protected $orderCode;

    /**
     * Construct for creating a new instance of this class
     *
     * @param array|string $data An array with assignable Parameters or an
     *                           Address or an addressID
     */
    public function __construct($data = null)
    {
        $this->massAssign($data);
    }

    /**
     * Mandatory If set to true slydepay will confirm pending payment for this order
     *
     * @param  bool $confirmTransaction The confirm transaction status
     * @return self
     */
    public function confirmTransaction(bool $confirmTransaction)
    {
        return $this->setConfirmTransaction($confirmTransaction);
    }

    /**
     * @return string
     */
    public function getConfirmTransaction()
    {
        return $this->confirmTransaction;
    }

    /**
     * @param string $confirmTransaction
     *
     * @return self
     */
    public function setConfirmTransaction(bool $confirmTransaction)
    {
        $this->confirmTransaction = $confirmTransaction;

        return $this;
    }

    /**
     * @return string
     */
    public function getPayToken()
    {
        return $this->payToken;
    }

    /**
     * @param string $payToken
     *
     * @return self
     */
    public function setPayToken($payToken)
    {
        $this->payToken = $payToken;

        return $this;
    }

    /**
     * @return string
     */
    public function getOrderCode()
    {
        return $this->orderCode;
    }

    /**
     * @param string $orderCode
     *
     * @return self
     */
    public function setOrderCode($orderCode)
    {
        $this->orderCode = $orderCode;

        return $this;
    }

    /**
     * {@inheritdoc}
     */
    public function run()
    {
        $this->propertiesPassRequired();

        return $this->_post(
            'invoice/checkstatus',
            $this->propertiesToArray()
        );
    }
}
